setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
getwd()
setwd(
file.path(
"/media"
, "latex"
, "Profiles"
, "MYaseen208"
, "Muhammad_Yaseen"
, "Consultancy_at_UAF"
, "Mr._M._Yaseen"
, "R_Packages"
, "PakPC2017"
, "PakPC2017"
)
)
getwd()
install.packages("devtools")
library(devtools)
devtools::load_all()
library(PakPC2017GUI)
?PakPC2017GUI
PakPC2017GUI()
load("/home/yaseen/Desktop/QCSimBoot/RepCpAvgWidthCovProb.RData")
View(RepCpAvgWidthCovProb)
library(stability)
?add_anova
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
ge_effects.default <-
function(.data, y, geno, env){
Y   <- deparse(substitute(y))
G   <- deparse(substitute(geno))
E   <- deparse(substitute(env))
ge_means <- tapply(.data$Y, list(.data$G, .data$E), mean)
gge_effects <-
sweep(
x      = ge_means
, MARGIN = 2
, STATS  = colMeans(ge_means)
)
ge_effects <-
sweep(
x      = gge_effects
, MARGIN = 1
, STATS  = rowMeans(gge_effects)
)
return(list(
"ge_means"    = ge_means
, "ge_effects"  = ge_effects
, "gge_effects" = gge_effects
))
}
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
Yield.Effects$ge_means
?spread
ge_effects.default <-
function(.data, y, geno, env){
y    <- enquo(y)
geno <- enquo(geno)
env  <- enquo(env)
ge_means <- .data %>%
dplyr::group_by(!!geno, !!env) %>%
dplyr::summarize(Mean  = mean(!!y)) %>%
tidyr::spread(key = env, value = Mean)
# Y   <- deparse(substitute(y))
# G   <- deparse(substitute(geno))
# E   <- deparse(substitute(env))
#
# ge_means <- tapply(.data$Y, list(.data$G, .data$E), mean)
gge_effects <-
sweep(
x      = ge_means
, MARGIN = 2
, STATS  = colMeans(ge_means)
)
ge_effects <-
sweep(
x      = gge_effects
, MARGIN = 1
, STATS  = rowMeans(gge_effects)
)
return(list(
"ge_means"    = ge_means
, "ge_effects"  = ge_effects
, "gge_effects" = gge_effects
))
}
data(ge_data)
Yield.Effects <- ge_effects(
.data = ge_data
, y    = Yield
, geno = Gen
, env  = Env
)
names(Yield.Effects)
Yield.Effects
devtools::load_all()
rm(list = ls())
library(stability)
rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
getwd()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
library(stability)
library(help = stability)
rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
getwd()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
library(stability)
library(help = stability)
library(readxl)
bd <- readxl::read_xlsx(path = "/home/myaseen/Downloads/Stab.xlsx")
str(bd)
library(tidyverse)
bd <-
bd %>%
dplyr::mutate(
Env = factor(Env)
, Geno = factor(Geno)
, Rep  = factor(Rep)
)
add_anova(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
ammi(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
ammi_biplot(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
er_anova(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
ge_effects(
.data = bd
, .y = SL
, .gen = Geno
, .env = Env
)
er_anova(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
ge_effects(
.data = bd
, .y = SL
, .gen = Geno
, .env = Env
)
ge_means(
.data = bd
, .y = SL
, .gen = Geno
, .env = Env
)
gge_biplot(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_asv(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_dist(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
, .m    = 2
)
stab_fox(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_kang(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_masv(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_measures(
.data = bd
, .y = SL
, .gen = Geno
, .env = Env
)
stab_par(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
stab_reg(
.data = bd
, .y = SL
, .rep = Rep
, .gen = Geno
, .env = Env
)
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
library(pkgdown)
pkgdown::build_site(
pkg          = "."
, examples     = TRUE
, run_dont_run = FALSE
, seed         = 12345
, mathjax      = TRUE
, lazy         = FALSE
, override     = list()
, preview      = NA
)
rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
getwd()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
library(stability)
devtools::build(vignettes = TRUE, manual = TRUE)
devtools::build(binary = TRUE,  vignettes = TRUE,
manual = TRUE, args = c('--preclean'))
devtools::check()
devtools::run_examples()
devtools::check_man()
usethis::use_cran_comments()
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
library(pkgdown)
pkgdown::build_site(
pkg          = "."
, examples     = TRUE
, run_dont_run = FALSE
, seed         = 12345
, mathjax      = TRUE
, lazy         = FALSE
, override     = list()
, preview      = NA
)
devtools::check_win_devel(pkg = ".", args = NULL, quiet = FALSE)
devtools::check_win_devel(pkg = ".", args = NULL, quiet = FALSE)
devtools::check_win_devel(pkg = ".", args = NULL, quiet = FALSE)
devtools::check_win_devel(pkg = ".", args = NULL, quiet = FALSE)
devtools::release(pkg = ".", check = FALSE, args = NULL)
devtools::release(pkg = ".", check = FALSE, args = NULL)
getwd()
