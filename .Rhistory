, names(fm1$m1)
)
fm1$m1
lapply(split(ge_data, ge_data$Env), aov, formula = Yield ~ Block + Gen)
lapply(split(ge_data, ge_data$Env), summary(aov), formula = Yield ~ Block + Gen)
fm1 <-
ge_data %>%
dplyr::group_by(Env) %>%
do(m1 = summary(aov(Yield ~ Block + Gen, data = .)))
fm1$m1
?do
ge_data %>%
dplyr::group_by(Env) %>%
purrr::map(.f = ~ summary(aov(Yield ~ Block + Gen, data = ge_data)))
ge_data %>%
dplyr::nest(Env) %>%
purrr::map(.f = ~ summary(aov(Yield ~ Block + Gen, data = ge_data)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.f = ~ summary(aov(Yield ~ Block + Gen, data = ge_data)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.f = ~ summary(aov(Yield ~ Block + Gen, data = .)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ lm(Yield ~ Block + Gen, data = .)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ aov(Yield ~ Block + Gen, data = .)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = .))))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = .)))) %>%
tidyr::unnest()
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ lm(Yield ~ Block + Gen, data = .))) %>%
dplyr::mutate(Pred = purrr::map(.x = m1,   .f = ~ anova)) %>%
tidyr::unnest()
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ lm(Yield ~ Block + Gen, data = .))) %>%
dplyr::mutate(Pred = purrr::map(.x = m1,   .f = ~ anova))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
dplyr::mutate(m1   = purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = .))))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = .)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = data)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.f = ~ summary(aov(Yield ~ Block + Gen, data = data)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.x = ., .f = ~ summary(aov(Yield ~ Block + Gen, data = .)))
ge_data %>%
dplyr::group_by(Env) %>%
tidyr::nest() %>%
purrr::map(.x = ge_data, .f = ~ summary(aov(Yield ~ Block + Gen, data = ge_data)))
df1 <- mtcars
df1
View(mtcars)
df1$cyl  <- factor(df1$cyl)
df1$gear <- factor(df1$gear)
fm1 <-
df1 %>%
dplyr::group_by(gear) %>%
dplyr::do(m1 = summary(aov(mpg ~ cyl, data = .)))
fm1$m1
fm1$m1
attr(fm1$m1)
attributes(fm1$m1)
names(fm1$m1)
attr(fm1$m1, "names") <-
paste0(
"Analysis of Variance for "
, names(fm1$m1)
)
fm1$m1
fm2 <-
df1 %>%
dplyr::group_by(gear) %>%
tidyr::nest() %>%
dplyr::mutate(m2 = purrr::map(.x = data, .f = ~ summary(aov(Yield ~ Block + Gen, data = .)))) %>%
library(stability)
fm2 <-
df1 %>%
dplyr::group_by(gear) %>%
tidyr::nest() %>%
dplyr::mutate(m2 = purrr::map(.x = data, .f = ~ summary(aov(mpg ~ cyl, data = .))))
fm2
df1 %>%
dplyr::group_by(gear) %>%
tidyr::nest() %>%
dplyr::mutate(m2 = purrr::map(.x = data, .f = ~ summary(aov(mpg ~ cyl, data = .)))) %>%
tidyr::unnest()
fm1$m1
fm1 <-
ge_data %>%
dplyr::group_by(Env) %>%
dplyr::do(m1 = summary(aov(Yield ~ Block + Gen, data = .)))
fm1$m1
df1 <- mtcars
df1$cyl  <- factor(df1$cyl)
df1$gear <- factor(df1$gear)
fm1 <-
df1 %>%
dplyr::group_by(gear) %>%
dplyr::do(m1 = summary(aov(mpg ~ cyl, data = .)))
fm1$m1
fm1$m1
fm2 <-
df1 %>%
dplyr::group_by(gear) %>%
tidyr::nest() %>%
dplyr::mutate(m2 = purrr::map(.x = data, .f = ~ summary(aov(mpg ~ cyl, data = .))))
fm2$m2
str(fm2$m2)
levels(df1$cyl)
attr(fm1$m1, "names") <-
paste0(
"Analysis of Variance for "
, levels(df1$cyl)
)
fm1$m1
#' @name    indiv_anova
#' @aliases indiv_anova
#' @title  Individual ANOVA for Each Environment
#' @description Individual ANOVA for Each Environment
#'
#' @param .data  data.frame
#' @param .y     Response Variable
#' @param .rep   Replication Factor
#' @param .gen   Genotypes Factor
#' @param .env   Environment Factor
#'
#' @return Additive ANOVA
#'
#' @author
#' \enumerate{
#'          \item Muhammad Yaseen (\email{myaseen208@@gmail.com})
#'          \item Kent M. Edkridge (\email{keskridge1@@unl.edu})
#'          \item Ghulam Murtaza (\email{gmurtaza208@@gmail.com})
#'          }
#'
#' @references
#'  Singh, R. K. and Chaudhary, B. D. (2004) \emph{Biometrical Methods in Quantitative Genetic Analysis}.
#'              New Delhi: Kalyani.
#'
#' @import rlang
#' @import tibble
#' @importFrom lme4 lmList
#' @importFrom stats anova as.formula ave coef confint lm pf terms
#' @export
#'
#' @examples
#'
#' data(ge_data)
#' Yield.indiv_anova <-
#'          indiv_anova(
#'             .data = ge_data
#'           , .y    = Yield
#'           , .rep  = Rep
#'           , .gen  = Gen
#'           , .env  = Env
#'           )
#' Yield.indiv_anova
#'
#'
indiv_anova <- function(.data, .y, .rep, .gen, .env) {
UseMethod("indiv_anova")
}
#' @export
#' @rdname indiv_anova
indiv_anova.default <-
function(.data, .y, .rep, .gen, .env){
Y   <- deparse(substitute(.y))
Rep <- deparse(substitute(.rep))
G   <- deparse(substitute(.gen))
E   <- deparse(substitute(.env))
g <- length(levels(.data[[G]]))
e <- length(levels(.data[[E]]))
r <- length(levels(.data[[Rep]]))
ind_aov <-
.data %>%
dplyr::group_by(!!rlang::sym(E)) %>%
dplyr::do(m1 = summary(aov(!!rlang::sym(Y) ~ !!rlang::sym(G), data = .)))
return(ind_aov)
}
data(ge_data)
Yield.indiv_anova <-
indiv_anova(
.data = ge_data
, .y    = Yield
, .rep  = Rep
, .gen  = Gen
, .env  = Env
)
Yield.indiv_anova
#' @name    indiv_anova
#' @aliases indiv_anova
#' @title  Individual ANOVA for Each Environment
#' @description Individual ANOVA for Each Environment
#'
#' @param .data  data.frame
#' @param .y     Response Variable
#' @param .rep   Replication Factor
#' @param .gen   Genotypes Factor
#' @param .env   Environment Factor
#'
#' @return Additive ANOVA
#'
#' @author
#' \enumerate{
#'          \item Muhammad Yaseen (\email{myaseen208@@gmail.com})
#'          \item Kent M. Edkridge (\email{keskridge1@@unl.edu})
#'          \item Ghulam Murtaza (\email{gmurtaza208@@gmail.com})
#'          }
#'
#' @references
#'  Singh, R. K. and Chaudhary, B. D. (2004) \emph{Biometrical Methods in Quantitative Genetic Analysis}.
#'              New Delhi: Kalyani.
#'
#' @import rlang
#' @import tibble
#' @importFrom lme4 lmList
#' @importFrom stats anova as.formula ave coef confint lm pf terms
#' @export
#'
#' @examples
#'
#' data(ge_data)
#' Yield.indiv_anova <-
#'          indiv_anova(
#'             .data = ge_data
#'           , .y    = Yield
#'           , .rep  = Rep
#'           , .gen  = Gen
#'           , .env  = Env
#'           )
#' Yield.indiv_anova
#'
#'
indiv_anova <- function(.data, .y, .rep, .gen, .env) {
UseMethod("indiv_anova")
}
#' @export
#' @rdname indiv_anova
indiv_anova.default <-
function(.data, .y, .rep, .gen, .env){
Y   <- deparse(substitute(.y))
Rep <- deparse(substitute(.rep))
G   <- deparse(substitute(.gen))
E   <- deparse(substitute(.env))
g <- length(levels(.data[[G]]))
e <- length(levels(.data[[E]]))
r <- length(levels(.data[[Rep]]))
ind_aov <-
.data %>%
dplyr::group_by(!!rlang::sym(E)) %>%
dplyr::do(m1 = summary(aov(!!rlang::sym(Y) ~ !!rlang::sym(G), data = .)))
return(ind_aov = ind_aov$m1)
}
data(ge_data)
Yield.indiv_anova <-
indiv_anova(
.data = ge_data
, .y    = Yield
, .rep  = Rep
, .gen  = Gen
, .env  = Env
)
Yield.indiv_anova
#' @name    indiv_anova
#' @aliases indiv_anova
#' @title  Individual ANOVA for Each Environment
#' @description Individual ANOVA for Each Environment
#'
#' @param .data  data.frame
#' @param .y     Response Variable
#' @param .rep   Replication Factor
#' @param .gen   Genotypes Factor
#' @param .env   Environment Factor
#'
#' @return Additive ANOVA
#'
#' @author
#' \enumerate{
#'          \item Muhammad Yaseen (\email{myaseen208@@gmail.com})
#'          \item Kent M. Edkridge (\email{keskridge1@@unl.edu})
#'          \item Ghulam Murtaza (\email{gmurtaza208@@gmail.com})
#'          }
#'
#' @references
#'  Singh, R. K. and Chaudhary, B. D. (2004) \emph{Biometrical Methods in Quantitative Genetic Analysis}.
#'              New Delhi: Kalyani.
#'
#' @import rlang
#' @import tibble
#' @importFrom lme4 lmList
#' @importFrom stats anova as.formula ave coef confint lm pf terms
#' @export
#'
#' @examples
#'
#' data(ge_data)
#' Yield.indiv_anova <-
#'          indiv_anova(
#'             .data = ge_data
#'           , .y    = Yield
#'           , .rep  = Rep
#'           , .gen  = Gen
#'           , .env  = Env
#'           )
#' Yield.indiv_anova
#'
#'
indiv_anova <- function(.data, .y, .rep, .gen, .env) {
UseMethod("indiv_anova")
}
#' @export
#' @rdname indiv_anova
indiv_anova.default <-
function(.data, .y, .rep, .gen, .env){
Y   <- deparse(substitute(.y))
Rep <- deparse(substitute(.rep))
G   <- deparse(substitute(.gen))
E   <- deparse(substitute(.env))
g <- length(levels(.data[[G]]))
e <- length(levels(.data[[E]]))
r <- length(levels(.data[[Rep]]))
ind_aov <-
.data %>%
dplyr::group_by(!!rlang::sym(E)) %>%
dplyr::do(m1 = summary(aov(!!rlang::sym(Y) ~ !!rlang::sym(G), data = .)))
attr(ind_aov$m1, "names") <-
paste0(
"Analysis of Variance for "
, levels(levels(.data[[E]]))
)
return(ind_aov = ind_aov$m1)
}
data(ge_data)
Yield.indiv_anova <-
indiv_anova(
.data = ge_data
, .y    = Yield
, .rep  = Rep
, .gen  = Gen
, .env  = Env
)
Yield.indiv_anova
#' @name    indiv_anova
#' @aliases indiv_anova
#' @title  Individual ANOVA for Each Environment
#' @description Individual ANOVA for Each Environment
#'
#' @param .data  data.frame
#' @param .y     Response Variable
#' @param .rep   Replication Factor
#' @param .gen   Genotypes Factor
#' @param .env   Environment Factor
#'
#' @return Additive ANOVA
#'
#' @author
#' \enumerate{
#'          \item Muhammad Yaseen (\email{myaseen208@@gmail.com})
#'          \item Kent M. Edkridge (\email{keskridge1@@unl.edu})
#'          \item Ghulam Murtaza (\email{gmurtaza208@@gmail.com})
#'          }
#'
#' @references
#'  Singh, R. K. and Chaudhary, B. D. (2004) \emph{Biometrical Methods in Quantitative Genetic Analysis}.
#'              New Delhi: Kalyani.
#'
#' @import rlang
#' @import tibble
#' @importFrom lme4 lmList
#' @importFrom stats anova as.formula ave coef confint lm pf terms
#' @export
#'
#' @examples
#'
#' data(ge_data)
#' Yield.indiv_anova <-
#'          indiv_anova(
#'             .data = ge_data
#'           , .y    = Yield
#'           , .rep  = Rep
#'           , .gen  = Gen
#'           , .env  = Env
#'           )
#' Yield.indiv_anova
#'
#'
indiv_anova <- function(.data, .y, .rep, .gen, .env) {
UseMethod("indiv_anova")
}
#' @export
#' @rdname indiv_anova
indiv_anova.default <-
function(.data, .y, .rep, .gen, .env){
Y   <- deparse(substitute(.y))
Rep <- deparse(substitute(.rep))
G   <- deparse(substitute(.gen))
E   <- deparse(substitute(.env))
g <- length(levels(.data[[G]]))
e <- length(levels(.data[[E]]))
r <- length(levels(.data[[Rep]]))
ind_aov <-
.data %>%
dplyr::group_by(!!rlang::sym(E)) %>%
dplyr::do(m1 = summary(aov(!!rlang::sym(Y) ~ !!rlang::sym(G), data = .)))
attr(ind_aov$m1, "names") <-
paste0(
"Analysis of Variance for "
, levels(.data[[E]])
)
return(ind_aov = ind_aov$m1)
}
data(ge_data)
Yield.indiv_anova <-
indiv_anova(
.data = ge_data
, .y    = Yield
, .rep  = Rep
, .gen  = Gen
, .env  = Env
)
Yield.indiv_anova
rm(list = ls())
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
getwd()
library(devtools)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
library(stability)
library(help = stability)
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
library(pkgdown)
pkgdown::build_site(
pkg          = "."
, examples     = TRUE
, run_dont_run = FALSE
, seed         = 12345
, mathjax      = TRUE
, lazy         = FALSE
, override     = list()
, preview      = NA
)
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
library(pkgdown)
pkgdown::build_site(
pkg          = "."
, examples     = TRUE
, run_dont_run = FALSE
, seed         = 12345
, mathjax      = TRUE
, lazy         = FALSE
, override     = list()
, preview      = NA
)
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::install(quick = TRUE, build_vignettes = TRUE, upgrade_dependencies = FALSE)
devtools::build(vignettes = TRUE, manual = TRUE)
devtools::build(binary = TRUE,  vignettes = TRUE,
manual = TRUE, args = c('--preclean'))
devtools::check()
devtools::load_all()
# usethis::use_testthat()
devtools::document(roclets=c('rd', 'collate', 'namespace', 'vignette'))
devtools::build(vignettes = TRUE, manual = TRUE)
devtools::build(binary = TRUE,  vignettes = TRUE,
manual = TRUE, args = c('--preclean'))
devtools::check()
devtools::check_win_devel(pkg = ".", args = NULL, quiet = FALSE)
devtools::release(pkg = ".", check = FALSE, args = NULL)
setwd("/media/myaseen/Documents/MYaseen208/Consultancy_at_UAF/Mr._M._Yaseen/2017-09-14RPackages/stability/stability")
library(pkgdown)
pkgdown::build_site(
pkg          = "."
, examples     = TRUE
, run_dont_run = FALSE
, seed         = 12345
, mathjax      = TRUE
, lazy         = FALSE
, override     = list()
, preview      = NA
)
